#!/system/bin/sh

function chmod_retry()
{
    hisi_file=$1
    hisi_file_user=$2
    hisi_file_group=$3
    chmod_try=5
    base_name=${hisi_file##*/}

    #print_kernel_message "plat base_name is ${base_name}"

    while [ $chmod_try -gt 0 ];do
        if [ -e ${hisi_file} ]
        then
            chmod 660 ${hisi_file}
            if [ $? -eq 0 ]
            then
                print_kernel_message "plat chmod ${hisi_file} succ"
            else
                print_kernel_message "plat chmod ${hisi_file} failed"
                let chmod_try--
                continue
            fi

            chown ${hisi_file_user}:${hisi_file_group} ${hisi_file}
            if [ $? -eq 0 ]
            then
                print_kernel_message "plat chown ${hisi_file} succ"
                print_kernel_message "plat `ls -l ${hisi_file}`"
                break
            else
                print_kernel_message "plat chown ${hisi_file} failed"
            fi
            let chmod_try--
        else
            cat /proc/misc | grep ${base_name}
            if [ $? -eq 0 ]
            then
                print_kernel_message "plat ${base_name} exist in /proc/misc, sleep wait 1s [$chmod_try]"
                sleep 1
                let chmod_try--
                continue
            else
                print_kernel_message "plat ${base_name} not exist in /proc/misc, ignore"
                break
            fi
        fi
    done
}

function mk_dirs()
{
    umask 002

    chmod_retry /dev/hwfm system system
    chmod_retry /dev/hwgnss system system
    chmod_retry /dev/hwbt bluetooth net_bt_stack
    chmod_retry /dev/hwnfc nfc nfc
    chmod_retry /dev/hwir system system

    chmod_retry /sys/hi110x_ps/gnss_lowpower_state system system
    chmod_retry /sys/hi110x_ps/ir_ctrl system system
    chmod_retry /sys/hisys/hipriv system system
    #echo 1 > /sys/hi110x_ps/bfg_lowpower_enable

    mkdir -p /data/gnss/pgps/chip
    mkdir -p /data/log/gps/pgps/chip
    chown system:system /data/gnss
    chown system:system /data/gnss/pgps
    chown system:system /data/gnss/pgps/chip
    chown system:system /data/log/gps
    chown system:system /data/log/gps/pgps
    chown system:system /data/log/gps/pgps/chip
    mkdir -p /data/hwlogdir/gnss_log/device/
    mkdir -p /data/log/gps/device
    chown system:system /data/hwlogdir
    mkdir -p /data/hwlogdir/gnss_log/eph_alm
    mkdir -p /data/log/gps/eph_alm
    chown system:system /data/hwlogdir/gnss_log/eph_alm
    chown system:system /data/log/gps/eph_alm
    mkdir -p /data/hwlogdir/uart_rx
    chown system:system /data/hwlogdir/uart_rx

    mkdir -p /data/hwlogdir/chr_log

    chmod 640 /dev/hwbfgdbg
    chown root:system /dev/hwbfgdbg
    chmod 660 /dev/chrKmsgWifi
    chown system:system /dev/chrKmsgWifi
    chmod 660 /dev/chrKmsgPlat
    chown system:system /dev/chrKmsgPlat
    chmod 660 /dev/chrAppWifi
    chown wifi:wifi /dev/chrAppWifi
    chmod 664 /dev/chrAppBt
    chown bluetooth:net_bt_stack /dev/chrAppBt
    chmod 660 /dev/chrAppGnss
    chown system:system /dev/chrAppGnss

    mkdir -p /data/hwlogdir/wifi_log
    mkdir -p /data/hwlogdir/wifi_log/dump
    mkdir -p /data/hwlogdir/bfg_log
    mkdir -p /data/log/wifi
    mkdir -p /data/log/wifi/dump
    mkdir -p /data/log/hi110x/bfg_log

    mkdir -p /data/hwlogdir/exception/

    chmod 0666 /data/misc/wifi/wpa_supplicant.conf
    if [ -f "/data/misc/wifi/efuse" ]
    then
        chmod 0444 /data/misc/wifi/efuse
    fi

    print_kernel_message "plat init connectivity mode, dir finish"
}

function print_kernel_message()
{
    if [ -e /dev/kmsg ]
    then
        echo $1 > /dev/kmsg
    fi
}

function insmod_kernel_module()
{
    module_file_path=$1
    if [ -e $module_file_path ]
    then
        insmod $module_file_path
        if [ $? -eq 0 ]
        then
            print_kernel_message "kernel module $module_file_path insmod succ"
        else
            print_kernel_message "kernel module $module_file_path insmod failed!ret=$?"
            return 1
        fi
    else
        print_kernel_message "hisi kernel module:$module_file_path not exist"
        return 1
    fi
    return 0
}

function insmod_kernel_modules()
{
    insmod_kernel_module /system/lib/plat.ko
    if [ $? -ne 0 ]
    then
        return 1;
    fi
    insmod_kernel_module /system/lib/wifi.ko
    if [ $? -ne 0 ]
    then
        return 1;
    fi
    print_kernel_message "insmod all hisi kernel modules succ"
    return 0
}

function load_hisi_kenrel_init_function()
{
    module_file_path=$1
    if [ -e $module_file_path ]
    then
        echo init > $module_file_path
        return_value=`cat $module_file_path`
        if [ "$return_value" = "running" ]
        then
            print_kernel_message "kernel module $module_file_path init succ"
        else
            print_kernel_message "kernel module $module_file_path init failed ret=$return_value"
            return 1
        fi
    else
        print_kernel_message "hisi kernel module:$module_file_path not exist"
        return 1
    fi
    return 0
}

function load_hisi_kenrel_init_functions()
{
    load_hisi_kenrel_init_function /sys/hisys/boot/plat
    if [ $? -ne 0 ]
    then
        return 1;
    fi
    load_hisi_kenrel_init_function /sys/hisys/boot/wifi
    if [ $? -ne 0 ]
    then
        return 1;
    fi
    print_kernel_message "insmod all hisi kernel modules succ"
    return 0
}

function load_drivers()
{
    if [ -d /sys/hisys/boot ]
    then
        print_kernel_message "process hisi build-in step"
        load_hisi_kenrel_init_functions
    else
        print_kernel_message "process hisi modules step"
        insmod_kernel_modules
    fi
    return $?
}

function main_user()
{
    local mode
    mode=$1

    load_drivers

    if [ $mode != "recovery" ] ; then
        mk_dirs
    fi

    if [ -e /sys/hi110x_ps/install ]
    then
        setprop setup_hi110x_modules success
        print_kernel_message "setprop setup_hi110x_modules to success ok"
    fi
}

#--------------------main-----------------
#in normal mode, the service run without argument.
#in recovery mode, the service run with argument "recovery"
if [ $# != 0 ] ; then
    main_user $@
else
    main_user normal
fi

exit
